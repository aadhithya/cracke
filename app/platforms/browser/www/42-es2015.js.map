{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-popover-ios.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6H;AAC/F;AACC;AACgC;AAC9B;AACyF;AACnE;AACuC;AACzC;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA,uCAAuC,gBAAgB;AACvD;AACA;AACA,0BAA0B,gEAAe;AACzC,8BAA8B,gEAAe;AAC7C,6BAA6B,gEAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,gEAAe;AACzC,8BAA8B,gEAAe;AAC7C,6BAA6B,gEAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gEAAe;AACzC,8BAA8B,gEAAe;AAC7C,6BAA6B,gEAAe;AAC5C,6BAA6B,gEAAe;AAC5C,8BAA8B,gEAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe;AACjC,mBAAmB,gBAAgB;AACnC,+BAA+B,QAAQ,GAAG,QAAQ;AAClD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAA0B,gEAAe;AACzC,8BAA8B,gEAAe;AAC7C,6BAA6B,gEAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ,2DAAgB;AACxB;AACA,oBAAoB,2DAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uDAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,QAAQ,+DAAc;AACtB,0BAA0B,2DAAW;AACrC,2BAA2B,2DAAW;AACtC,2BAA2B,2DAAW;AACtC,0BAA0B,2DAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB,mBAAmB;AAC/F,kCAAkC,yEAAe;AACjD,cAAc,4DAAS;AACvB,eAAe,+DAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,+DAAO;AAC3C;AACA,kBAAkB,yEAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAW;AAC1B;AACA;AACA;AACA;AACA;AACA,eAAe,+DAAW;AAC1B;AACA;AACA,qBAAqB,2DAAU;AAC/B,eAAe,cAAc;AAC7B,gBAAgB,2DAAC,CAAC,mDAAI,GAAG;AACzB,2BAA2B,0BAA0B;AACrD,aAAa,uCAAuC,EAAE,4DAAW,mBAAmB,wDAAwD,6NAA6N,EAAE,2DAAC,kBAAkB,6DAA6D,GAAG,2DAAC,SAAS,2BAA2B,EAAE,2DAAC,SAAS,yBAAyB,GAAG,2DAAC,SAAS,2BAA2B;AAChjB;AACA,cAAc,QAAQ,2DAAU,OAAO;AACvC,wBAAwB,+BAA+B,8CAA8C,cAAc,eAAe,iBAAiB,cAAc,OAAO,QAAQ,MAAM,SAAS,oBAAoB,aAAa,eAAe,sBAAsB,mBAAmB,qBAAqB,uBAAuB,iCAAiC,aAAa,qCAAqC,aAAa,oCAAoC,UAAU,WAAW,oCAAoC,oBAAoB,aAAa,kBAAkB,0BAA0B,sBAAsB,mBAAmB,2BAA2B,2BAA2B,qBAAqB,6BAA6B,6BAA6B,6BAA6B,qCAAqC,6BAA6B,cAAc,WAAW,qCAAqC,wBAAwB,0BAA0B,2BAA2B,yBAAyB,sBAAsB,cAAc,iBAAiB,kBAAkB,oCAAoC,mBAAmB,kCAAkC,cAAc,kBAAkB,WAAW,YAAY,gBAAgB,wCAAwC,SAAS,QAAQ,kBAAkB,kBAAkB,WAAW,YAAY,gCAAgC,wBAAwB,6BAA6B,aAAa,WAAW,sNAAsN,WAAW,YAAY,UAAU,uEAAuE,SAAS,aAAa,6EAA6E,SAAS,4EAA4E,iKAAiK,gEAAgE,kDAAkD,2CAA2C,EAAE;AAC7vE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkC","file":"42-es2015.js","sourcesContent":["import { r as registerInstance, d as getIonMode, c as createEvent, h, H as Host, e as getElement } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nimport './helpers-46f4a262.js';\nimport { c as createAnimation } from './animation-af478fe9.js';\nimport './constants-3c3e1099.js';\nimport { B as BACKDROP, d as prepareOverlay, e as present, f as dismiss, g as eventMethod } from './overlays-10640d86.js';\nimport { g as getClassMap } from './theme-18cbe2cc.js';\nimport { a as attachComponent, d as detachComponent } from './framework-delegate-c2e2e1f4.js';\nimport { d as deepReady } from './index-6826f2f6.js';\n\n/**\r\n * iOS Popover Enter Animation\r\n */\r\nconst iosEnterAnimation = (baseEl, ev) => {\r\n    let originY = 'top';\r\n    let originX = 'left';\r\n    const contentEl = baseEl.querySelector('.popover-content');\r\n    const contentDimentions = contentEl.getBoundingClientRect();\r\n    const contentWidth = contentDimentions.width;\r\n    const contentHeight = contentDimentions.height;\r\n    const bodyWidth = baseEl.ownerDocument.defaultView.innerWidth;\r\n    const bodyHeight = baseEl.ownerDocument.defaultView.innerHeight;\r\n    // If ev was passed, use that for target element\r\n    const targetDim = ev && ev.target && ev.target.getBoundingClientRect();\r\n    const targetTop = targetDim != null && 'top' in targetDim ? targetDim.top : bodyHeight / 2 - contentHeight / 2;\r\n    const targetLeft = targetDim != null && 'left' in targetDim ? targetDim.left : bodyWidth / 2;\r\n    const targetWidth = (targetDim && targetDim.width) || 0;\r\n    const targetHeight = (targetDim && targetDim.height) || 0;\r\n    const arrowEl = baseEl.querySelector('.popover-arrow');\r\n    const arrowDim = arrowEl.getBoundingClientRect();\r\n    const arrowWidth = arrowDim.width;\r\n    const arrowHeight = arrowDim.height;\r\n    if (targetDim == null) {\r\n        arrowEl.style.display = 'none';\r\n    }\r\n    const arrowCSS = {\r\n        top: targetTop + targetHeight,\r\n        left: targetLeft + targetWidth / 2 - arrowWidth / 2\r\n    };\r\n    const popoverCSS = {\r\n        top: targetTop + targetHeight + (arrowHeight - 1),\r\n        left: targetLeft + targetWidth / 2 - contentWidth / 2\r\n    };\r\n    // If the popover left is less than the padding it is off screen\r\n    // to the left so adjust it, else if the width of the popover\r\n    // exceeds the body width it is off screen to the right so adjust\r\n    //\r\n    let checkSafeAreaLeft = false;\r\n    let checkSafeAreaRight = false;\r\n    // If the popover left is less than the padding it is off screen\r\n    // to the left so adjust it, else if the width of the popover\r\n    // exceeds the body width it is off screen to the right so adjust\r\n    // 25 is a random/arbitrary number. It seems to work fine for ios11\r\n    // and iPhoneX. Is it perfect? No. Does it work? Yes.\r\n    if (popoverCSS.left < POPOVER_IOS_BODY_PADDING + 25) {\r\n        checkSafeAreaLeft = true;\r\n        popoverCSS.left = POPOVER_IOS_BODY_PADDING;\r\n    }\r\n    else if (contentWidth + POPOVER_IOS_BODY_PADDING + popoverCSS.left + 25 > bodyWidth) {\r\n        // Ok, so we're on the right side of the screen,\r\n        // but now we need to make sure we're still a bit further right\r\n        // cus....notchurally... Again, 25 is random. It works tho\r\n        checkSafeAreaRight = true;\r\n        popoverCSS.left = bodyWidth - contentWidth - POPOVER_IOS_BODY_PADDING;\r\n        originX = 'right';\r\n    }\r\n    // make it pop up if there's room above\r\n    if (targetTop + targetHeight + contentHeight > bodyHeight && targetTop - contentHeight > 0) {\r\n        arrowCSS.top = targetTop - (arrowHeight + 1);\r\n        popoverCSS.top = targetTop - contentHeight - (arrowHeight - 1);\r\n        baseEl.className = baseEl.className + ' popover-bottom';\r\n        originY = 'bottom';\r\n        // If there isn't room for it to pop up above the target cut it off\r\n    }\r\n    else if (targetTop + targetHeight + contentHeight > bodyHeight) {\r\n        contentEl.style.bottom = POPOVER_IOS_BODY_PADDING + '%';\r\n    }\r\n    arrowEl.style.top = arrowCSS.top + 'px';\r\n    arrowEl.style.left = arrowCSS.left + 'px';\r\n    contentEl.style.top = popoverCSS.top + 'px';\r\n    contentEl.style.left = popoverCSS.left + 'px';\r\n    if (checkSafeAreaLeft) {\r\n        contentEl.style.left = `calc(${popoverCSS.left}px + var(--ion-safe-area-left, 0px))`;\r\n    }\r\n    if (checkSafeAreaRight) {\r\n        contentEl.style.left = `calc(${popoverCSS.left}px - var(--ion-safe-area-right, 0px))`;\r\n    }\r\n    contentEl.style.transformOrigin = originY + ' ' + originX;\r\n    const baseAnimation = createAnimation();\r\n    const backdropAnimation = createAnimation();\r\n    const wrapperAnimation = createAnimation();\r\n    backdropAnimation\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 0.01, 0.08);\r\n    wrapperAnimation\r\n        .addElement(baseEl.querySelector('.popover-wrapper'))\r\n        .fromTo('opacity', 0.01, 1);\r\n    return baseAnimation\r\n        .addElement(baseEl)\r\n        .easing('ease')\r\n        .duration(100)\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n};\r\nconst POPOVER_IOS_BODY_PADDING = 5;\n\n/**\r\n * iOS Popover Leave Animation\r\n */\r\nconst iosLeaveAnimation = (baseEl) => {\r\n    const baseAnimation = createAnimation();\r\n    const backdropAnimation = createAnimation();\r\n    const wrapperAnimation = createAnimation();\r\n    backdropAnimation\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 0.08, 0);\r\n    wrapperAnimation\r\n        .addElement(baseEl.querySelector('.popover-wrapper'))\r\n        .fromTo('opacity', 0.99, 0);\r\n    return baseAnimation\r\n        .addElement(baseEl)\r\n        .easing('ease')\r\n        .duration(500)\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n};\n\n/**\r\n * Md Popover Enter Animation\r\n */\r\nconst mdEnterAnimation = (baseEl, ev) => {\r\n    const POPOVER_MD_BODY_PADDING = 12;\r\n    const doc = baseEl.ownerDocument;\r\n    const isRTL = doc.dir === 'rtl';\r\n    let originY = 'top';\r\n    let originX = isRTL ? 'right' : 'left';\r\n    const contentEl = baseEl.querySelector('.popover-content');\r\n    const contentDimentions = contentEl.getBoundingClientRect();\r\n    const contentWidth = contentDimentions.width;\r\n    const contentHeight = contentDimentions.height;\r\n    const bodyWidth = doc.defaultView.innerWidth;\r\n    const bodyHeight = doc.defaultView.innerHeight;\r\n    // If ev was passed, use that for target element\r\n    const targetDim = ev && ev.target && ev.target.getBoundingClientRect();\r\n    // As per MD spec, by default position the popover below the target (trigger) element\r\n    const targetTop = targetDim != null && 'bottom' in targetDim\r\n        ? targetDim.bottom\r\n        : bodyHeight / 2 - contentHeight / 2;\r\n    const targetLeft = targetDim != null && 'left' in targetDim\r\n        ? isRTL\r\n            ? targetDim.left - contentWidth + targetDim.width\r\n            : targetDim.left\r\n        : bodyWidth / 2 - contentWidth / 2;\r\n    const targetHeight = (targetDim && targetDim.height) || 0;\r\n    const popoverCSS = {\r\n        top: targetTop,\r\n        left: targetLeft\r\n    };\r\n    // If the popover left is less than the padding it is off screen\r\n    // to the left so adjust it, else if the width of the popover\r\n    // exceeds the body width it is off screen to the right so adjust\r\n    if (popoverCSS.left < POPOVER_MD_BODY_PADDING) {\r\n        popoverCSS.left = POPOVER_MD_BODY_PADDING;\r\n        // Same origin in this case for both LTR & RTL\r\n        // Note: in LTR, originX is already 'left'\r\n        originX = 'left';\r\n    }\r\n    else if (contentWidth + POPOVER_MD_BODY_PADDING + popoverCSS.left >\r\n        bodyWidth) {\r\n        popoverCSS.left = bodyWidth - contentWidth - POPOVER_MD_BODY_PADDING;\r\n        // Same origin in this case for both LTR & RTL\r\n        // Note: in RTL, originX is already 'right'\r\n        originX = 'right';\r\n    }\r\n    // If the popover when popped down stretches past bottom of screen,\r\n    // make it pop up if there's room above\r\n    if (targetTop + targetHeight + contentHeight > bodyHeight &&\r\n        targetTop - contentHeight > 0) {\r\n        popoverCSS.top = targetTop - contentHeight - targetHeight;\r\n        baseEl.className = baseEl.className + ' popover-bottom';\r\n        originY = 'bottom';\r\n        // If there isn't room for it to pop up above the target cut it off\r\n    }\r\n    else if (targetTop + targetHeight + contentHeight > bodyHeight) {\r\n        contentEl.style.bottom = POPOVER_MD_BODY_PADDING + 'px';\r\n    }\r\n    const baseAnimation = createAnimation();\r\n    const backdropAnimation = createAnimation();\r\n    const wrapperAnimation = createAnimation();\r\n    const contentAnimation = createAnimation();\r\n    const viewportAnimation = createAnimation();\r\n    backdropAnimation\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 0.01, 0.32);\r\n    wrapperAnimation\r\n        .addElement(baseEl.querySelector('.popover-wrapper'))\r\n        .fromTo('opacity', 0.01, 1);\r\n    contentAnimation\r\n        .addElement(contentEl)\r\n        .beforeStyles({\r\n        'top': `${popoverCSS.top}px`,\r\n        'left': `${popoverCSS.left}px`,\r\n        'transform-origin': `${originY} ${originX}`\r\n    })\r\n        .fromTo('transform', 'scale(0.001)', 'scale(1)');\r\n    viewportAnimation\r\n        .addElement(baseEl.querySelector('.popover-viewport'))\r\n        .fromTo('opacity', 0.01, 1);\r\n    return baseAnimation\r\n        .addElement(baseEl)\r\n        .easing('cubic-bezier(0.36,0.66,0.04,1)')\r\n        .duration(300)\r\n        .addAnimation([backdropAnimation, wrapperAnimation, contentAnimation, viewportAnimation]);\r\n};\n\n/**\r\n * Md Popover Leave Animation\r\n */\r\nconst mdLeaveAnimation = (baseEl) => {\r\n    const baseAnimation = createAnimation();\r\n    const backdropAnimation = createAnimation();\r\n    const wrapperAnimation = createAnimation();\r\n    backdropAnimation\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 0.32, 0);\r\n    wrapperAnimation\r\n        .addElement(baseEl.querySelector('.popover-wrapper'))\r\n        .fromTo('opacity', 0.99, 0);\r\n    return baseAnimation\r\n        .addElement(baseEl)\r\n        .easing('ease')\r\n        .duration(500)\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n};\n\nconst Popover = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.presented = false;\n        this.mode = getIonMode(this);\n        /**\n         * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n         */\n        this.keyboardClose = true;\n        /**\n         * If `true`, the popover will be dismissed when the backdrop is clicked.\n         */\n        this.backdropDismiss = true;\n        /**\n         * If `true`, a backdrop will be displayed behind the popover.\n         */\n        this.showBackdrop = true;\n        /**\n         * If `true`, the popover will be translucent.\n         * Only applies when the mode is `\"ios\"` and the device supports\n         * [`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\n         */\n        this.translucent = false;\n        /**\n         * If `true`, the popover will animate.\n         */\n        this.animated = true;\n        this.onDismiss = (ev) => {\n            ev.stopPropagation();\n            ev.preventDefault();\n            this.dismiss();\n        };\n        this.onBackdropTap = () => {\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.onLifecycle = (modalEvent) => {\n            const el = this.usersElement;\n            const name = LIFECYCLE_MAP[modalEvent.type];\n            if (el && name) {\n                const event = new CustomEvent(name, {\n                    bubbles: false,\n                    cancelable: false,\n                    detail: modalEvent.detail\n                });\n                el.dispatchEvent(event);\n            }\n        };\n        prepareOverlay(this.el);\n        this.didPresent = createEvent(this, \"ionPopoverDidPresent\", 7);\n        this.willPresent = createEvent(this, \"ionPopoverWillPresent\", 7);\n        this.willDismiss = createEvent(this, \"ionPopoverWillDismiss\", 7);\n        this.didDismiss = createEvent(this, \"ionPopoverDidDismiss\", 7);\n    }\n    /**\n     * Present the popover overlay after it has been created.\n     */\n    async present() {\n        if (this.presented) {\n            return;\n        }\n        const container = this.el.querySelector('.popover-content');\n        if (!container) {\n            throw new Error('container is undefined');\n        }\n        const data = Object.assign(Object.assign({}, this.componentProps), { popover: this.el });\n        this.usersElement = await attachComponent(this.delegate, container, this.component, ['popover-viewport', this.el['s-sc']], data);\n        await deepReady(this.usersElement);\n        return present(this, 'popoverEnter', iosEnterAnimation, mdEnterAnimation, this.event);\n    }\n    /**\n     * Dismiss the popover overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the popover. For example, 'cancel' or 'backdrop'.\n     */\n    async dismiss(data, role) {\n        const shouldDismiss = await dismiss(this, data, role, 'popoverLeave', iosLeaveAnimation, mdLeaveAnimation, this.event);\n        if (shouldDismiss) {\n            await detachComponent(this.delegate, this.usersElement);\n        }\n        return shouldDismiss;\n    }\n    /**\n     * Returns a promise that resolves when the popover did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionPopoverDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the popover will dismiss.\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionPopoverWillDismiss');\n    }\n    render() {\n        const mode = getIonMode(this);\n        const { onLifecycle } = this;\n        return (h(Host, { \"aria-modal\": \"true\", \"no-router\": true, style: {\n                zIndex: `${20000 + this.overlayIndex}`,\n            }, class: Object.assign(Object.assign({}, getClassMap(this.cssClass)), { [mode]: true, 'popover-translucent': this.translucent }), onIonPopoverDidPresent: onLifecycle, onIonPopoverWillPresent: onLifecycle, onIonPopoverWillDismiss: onLifecycle, onIonPopoverDidDismiss: onLifecycle, onIonDismiss: this.onDismiss, onIonBackdropTap: this.onBackdropTap }, h(\"ion-backdrop\", { tappable: this.backdropDismiss, visible: this.showBackdrop }), h(\"div\", { class: \"popover-wrapper\" }, h(\"div\", { class: \"popover-arrow\" }), h(\"div\", { class: \"popover-content\" }))));\n    }\n    get el() { return getElement(this); }\n    static get style() { return \".sc-ion-popover-ios-h{--background:var(--ion-background-color,#fff);--min-width:0;--min-height:0;--max-width:auto;--height:auto;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:fixed;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;color:var(--ion-text-color,#000);z-index:1001}.overlay-hidden.sc-ion-popover-ios-h{display:none}.popover-wrapper.sc-ion-popover-ios{opacity:0;z-index:10}.popover-content.sc-ion-popover-ios{display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:auto;z-index:10}.popover-viewport.sc-ion-popover-ios{--ion-safe-area-top:0px;--ion-safe-area-right:0px;--ion-safe-area-bottom:0px;--ion-safe-area-left:0px}.sc-ion-popover-ios-h{--width:200px;--max-height:90%;--box-shadow:none}.popover-content.sc-ion-popover-ios{border-radius:10px}.popover-arrow.sc-ion-popover-ios{display:block;position:absolute;width:20px;height:10px;overflow:hidden}.popover-arrow.sc-ion-popover-ios:after{left:3px;top:3px;border-radius:3px;position:absolute;width:14px;height:14px;-webkit-transform:rotate(45deg);transform:rotate(45deg);background:var(--background);content:\\\"\\\";z-index:10}[dir=rtl].sc-ion-popover-ios-h .popover-arrow.sc-ion-popover-ios:after, [dir=rtl] .sc-ion-popover-ios-h .popover-arrow.sc-ion-popover-ios:after, [dir=rtl].sc-ion-popover-ios .popover-arrow.sc-ion-popover-ios:after{left:unset;right:unset;right:3px}.popover-bottom.sc-ion-popover-ios-h .popover-arrow.sc-ion-popover-ios{top:auto;bottom:-10px}.popover-bottom.sc-ion-popover-ios-h .popover-arrow.sc-ion-popover-ios:after{top:-6px}\\@supports ((-webkit-backdrop-filter:blur(0)) or (backdrop-filter:blur(0))){.popover-translucent.sc-ion-popover-ios-h .popover-arrow.sc-ion-popover-ios:after, .popover-translucent.sc-ion-popover-ios-h .popover-content.sc-ion-popover-ios{background:rgba(var(--ion-background-color-rgb,255,255,255),.8);-webkit-backdrop-filter:saturate(180%) blur(20px);backdrop-filter:saturate(180%) blur(20px)}}\"; }\n};\nconst LIFECYCLE_MAP = {\n    'ionPopoverDidPresent': 'ionViewDidEnter',\n    'ionPopoverWillPresent': 'ionViewWillEnter',\n    'ionPopoverWillDismiss': 'ionViewWillLeave',\n    'ionPopoverDidDismiss': 'ionViewDidLeave',\n};\n\nexport { Popover as ion_popover };\n"],"sourceRoot":""}