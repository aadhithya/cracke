{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-toggle-ios.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6H;AAC/F;AACqD;AACH;AACpB;;AAE5D;AACA;AACA,QAAQ,2DAAgB;AACxB,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,2DAAW;AACpC,wBAAwB,2DAAW;AACnC,uBAAuB,2DAAW;AAClC,wBAAwB,2DAAW;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yJAA6B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6DAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAmD;AAClE,qBAAqB,2DAAU;AAC/B;AACA,sBAAsB,8DAAa;AACnC;AACA;AACA;AACA;AACA,QAAQ,8DAAiB;AACzB,gBAAgB,2DAAC,CAAC,mDAAI,GAAG,wGAAwG,QAAQ,oEAAoE,EAAE,4DAAkB,WAAW,0BAA0B,4DAAW,8HAA8H,GAAG,EAAE,2DAAC,SAAS,uBAAuB,EAAE,2DAAC,SAAS,wBAAwB,IAAI,2DAAC,YAAY,sHAAsH;AAChmB;AACA,cAAc,QAAQ,2DAAU,OAAO;AACvC,2BAA2B;AAC3B;AACA;AACA,MAAM;AACN,wBAAwB,eAAe,yCAAyC,iCAAiC,qBAAqB,aAAa,gBAAgB,eAAe,sBAAsB,kBAAkB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,UAAU,0BAA0B,yBAAyB,wBAAwB,oBAAoB,OAAO,OAAO,MAAM,cAAc,eAAe,aAAa,gBAAgB,kBAAkB,WAAW,YAAY,SAAS,uBAAuB,eAAe,wBAAwB,qBAAqB,gBAAgB,aAAa,iDAAiD,WAAW,YAAY,QAAQ,yBAAyB,SAAS,MAAM,yDAAyD,sDAAsD,yBAAyB,iCAAiC,+BAA+B,uBAAuB,kBAAkB,WAAW,YAAY,eAAe,8CAA8C,iCAAiC,aAAa,mBAAmB,cAAc,kBAAkB,WAAW,YAAY,gCAAgC,wBAAwB,wCAAwC,gCAAgC,6BAA6B,gBAAgB,oBAAoB,cAAc,SAAS,QAAQ,mBAAmB,kBAAkB,WAAW,YAAY,4HAA4H,oHAAoH,4GAA4G,kIAAkI,oCAAoC,uEAAuE,+DAA+D,sBAAsB,eAAe,+DAA+D,WAAW,YAAY,UAAU,oCAAoC,qCAAqC,wFAAwF,iCAAiC,yBAAyB,qCAAqC,wCAAwC,gCAAgC,4CAA4C,mHAAmH,mDAAmD,2CAA2C,6DAA6D,iCAAiC,yBAAyB,uCAAuC,WAAW,sDAAsD,UAAU,qJAAqJ,WAAW,YAAY,WAAW,wBAAwB,WAAW,sBAAsB,cAAc,eAAe,aAAa,gBAAgB,kBAAkB,kBAAkB,gBAAgB,mBAAmB,6FAA6F,sBAAsB,mBAAmB,oBAAoB,2BAA2B,0BAA0B,wBAAwB,wBAAwB,4BAA4B,eAAe,mBAAmB,gBAAgB,mBAAmB,6FAA6F,4BAA4B,mBAAmB,oBAAoB,wBAAwB,uBAAuB,yBAAyB,yBAAyB,EAAE;AACx+H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEgC","file":"75-es2015.js","sourcesContent":["import { r as registerInstance, c as createEvent, d as getIonMode, h, H as Host, e as getElement } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-46f4a262.js';\nimport { c as createColorClasses, h as hostContext } from './theme-18cbe2cc.js';\nimport { h as hapticSelection } from './haptic-c8f1473e.js';\n\nconst Toggle = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-tg-${toggleIds++}`;\n        this.lastDrag = 0;\n        this.activated = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the toggle is selected.\n         */\n        this.checked = false;\n        /**\n         * If `true`, the user cannot interact with the toggle.\n         */\n        this.disabled = false;\n        /**\n         * The value of the toggle does not mean if it's checked or not, use the `checked`\n         * property for that.\n         *\n         * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n         * it's only used when the toggle participates in a native `<form>`.\n         */\n        this.value = 'on';\n        this.onClick = () => {\n            if (this.lastDrag + 300 < Date.now()) {\n                this.checked = !this.checked;\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    checkedChanged(isChecked) {\n        this.ionChange.emit({\n            checked: isChecked,\n            value: this.value\n        });\n    }\n    disabledChanged() {\n        this.emitStyle();\n        if (this.gesture) {\n            this.gesture.setDisabled(this.disabled);\n        }\n    }\n    async connectedCallback() {\n        this.gesture = (await import('./index-624eea58.js')).createGesture({\n            el: this.el,\n            gestureName: 'toggle',\n            gesturePriority: 100,\n            threshold: 5,\n            passive: false,\n            onStart: () => this.onStart(),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.disabledChanged();\n    }\n    disconnectedCallback() {\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive-disabled': this.disabled,\n        });\n    }\n    onStart() {\n        this.activated = true;\n        // touch-action does not work in iOS\n        this.setFocus();\n    }\n    onMove(detail) {\n        if (shouldToggle(document, this.checked, detail.deltaX, -10)) {\n            this.checked = !this.checked;\n            hapticSelection();\n        }\n    }\n    onEnd(ev) {\n        this.activated = false;\n        this.lastDrag = Date.now();\n        ev.event.preventDefault();\n        ev.event.stopImmediatePropagation();\n    }\n    getValue() {\n        return this.value || '';\n    }\n    setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    render() {\n        const { inputId, disabled, checked, activated, color, el } = this;\n        const mode = getIonMode(this);\n        const labelId = inputId + '-lbl';\n        const label = findItemLabel(el);\n        const value = this.getValue();\n        if (label) {\n            label.id = labelId;\n        }\n        renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\n        return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), { [mode]: true, 'in-item': hostContext('ion-item', el), 'toggle-activated': activated, 'toggle-checked': checked, 'toggle-disabled': disabled, 'interactive': true }) }, h(\"div\", { class: \"toggle-icon\" }, h(\"div\", { class: \"toggle-inner\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled, ref: btnEl => this.buttonEl = btnEl })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n    static get style() { return \":host{-webkit-box-sizing:content-box!important;box-sizing:content-box!important;display:inline-block;outline:none;contain:content;cursor:pointer;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-focused) input{border:2px solid #5e9ed6}:host(.toggle-disabled){pointer-events:none}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}:host{--background:rgba(var(--ion-text-color-rgb,0,0,0),0.088);--background-checked:var(--ion-color-primary,#3880ff);--handle-background:#fff;--handle-background-checked:#fff;-webkit-box-sizing:content-box;box-sizing:content-box;position:relative;width:51px;height:32px;contain:strict}:host(.ion-color.toggle-checked) .toggle-icon{background:var(--ion-color-base)}.toggle-icon{border-radius:16px;display:block;position:relative;width:100%;height:100%;-webkit-transform:translateZ(0);transform:translateZ(0);-webkit-transition:background-color .3s;transition:background-color .3s;background:var(--background);overflow:hidden;pointer-events:none}.toggle-inner{left:2px;top:2px;border-radius:14px;position:absolute;width:28px;height:28px;-webkit-transition:width .12s ease-in-out 80ms,left .11s ease-in-out 80ms,right .11s ease-in-out 80ms,-webkit-transform .3s;transition:width .12s ease-in-out 80ms,left .11s ease-in-out 80ms,right .11s ease-in-out 80ms,-webkit-transform .3s;transition:transform .3s,width .12s ease-in-out 80ms,left .11s ease-in-out 80ms,right .11s ease-in-out 80ms;transition:transform .3s,width .12s ease-in-out 80ms,left .11s ease-in-out 80ms,right .11s ease-in-out 80ms,-webkit-transform .3s;background:var(--handle-background);-webkit-box-shadow:0 3px 12px rgba(0,0,0,.16),0 3px 1px rgba(0,0,0,.1);box-shadow:0 3px 12px rgba(0,0,0,.16),0 3px 1px rgba(0,0,0,.1);will-change:transform;contain:strict}:host-context([dir=rtl]) .toggle-inner,[dir=rtl] .toggle-inner{left:unset;right:unset;right:2px}:host(.toggle-checked) .toggle-icon{background:var(--background-checked)}:host(.toggle-activated) .toggle-icon:before,:host(.toggle-checked) .toggle-icon:before{-webkit-transform:scale3d(0,0,0);transform:scale3d(0,0,0)}:host(.toggle-checked) .toggle-inner{-webkit-transform:translate3d(19px,0,0);transform:translate3d(19px,0,0);background:var(--handle-background-checked)}:host-context([dir=rtl]).toggle-checked .toggle-inner,:host-context([dir=rtl]):host(.toggle-checked) .toggle-inner{-webkit-transform:translate3d(calc(-1 * 19px),0,0);transform:translate3d(calc(-1 * 19px),0,0)}:host(.toggle-activated.toggle-checked) .toggle-inner:before{-webkit-transform:scale3d(0,0,0);transform:scale3d(0,0,0)}:host(.toggle-activated) .toggle-inner{width:34px}:host(.toggle-activated.toggle-checked) .toggle-inner{left:-4px}:host-context([dir=rtl]).toggle-activated.toggle-checked .toggle-inner,:host-context([dir=rtl]):host(.toggle-activated.toggle-checked) .toggle-inner{left:unset;right:unset;right:-4px}:host(.toggle-disabled){opacity:.3}:host(.in-item[slot]){margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:16px;padding-right:8px;padding-top:6px;padding-bottom:5px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot]){padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:8px;padding-inline-end:8px}}:host(.in-item[slot=start]){padding-left:0;padding-right:16px;padding-top:6px;padding-bottom:5px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){padding-left:unset;padding-right:unset;-webkit-padding-start:0;padding-inline-start:0;-webkit-padding-end:16px;padding-inline-end:16px}}\"; }\n};\nconst shouldToggle = (doc, checked, deltaX, margin) => {\n    const isRTL = doc.dir === 'rtl';\n    if (checked) {\n        return (!isRTL && (margin > deltaX)) ||\n            (isRTL && (-margin < deltaX));\n    }\n    else {\n        return (!isRTL && (-margin < deltaX)) ||\n            (isRTL && (margin > deltaX));\n    }\n};\nlet toggleIds = 0;\n\nexport { Toggle as ion_toggle };\n"],"sourceRoot":""}